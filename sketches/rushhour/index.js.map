{"version":3,"sources":["webpack:///./src/sketches/rushhour.js"],"names":["debug","world","window","systems","ViewportWebGL","container","zoom","gridEnabled","lineWidth","DebugCanvas","viewportSystemName","DrawStats","DatGui","PlayerInputSteering","Health","Motion","Position","Thruster","Seeker","Repulsor","Collision","Bounce","Spawn","RoadRunner","astarCacheTTL","HordeSpawn","offscreenTTL","spawnMargin","minCount","maxFrameSpawn","spawn","x","y","MIN_SIZE","MAX_SIZE","size","Math","random","repulsor","get","map","key","sort","a","b","insert","Sprite","name","color","max","Collidable","mass","rotation","PI","dx","dy","drotation","deltaV","maxV","targetEntityId","radPerSec","destinations","placeRepulsor","horiz","markDestination","id","Name","range","force","Road","type","push","spacing","num","spawnSelfDrivingBus","spawnPoint","floor","length","destination","distance","tombstone","entityId","ttl","thrusterTurnCutoff","thrusterTurnThrottle","active","Runner","i","setTimeout","subscribe","msg","publish","start","vpSystem","getSystem","roadRunnerSystem","guiSystem","gui","generalf","addFolder","add","open","vpf","names","forEach","listen","options","zoomMin","zoomMax","step","rrf"],"mappings":"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","file":"sketches/rushhour/index.js","sourcesContent":["import * as Core from '../lib/core';\nimport { distance } from '../lib/utils';\n\nimport '../plugins/drawStats';\nimport '../plugins/memoryStats';\nimport '../plugins/datGui';\nimport '../plugins/debugCanvas';\nimport '../plugins/viewportWebGL';\nimport '../plugins/name';\nimport '../plugins/health';\nimport '../plugins/position';\nimport '../plugins/motion';\nimport '../plugins/thruster';\nimport '../plugins/seeker';\nimport '../plugins/collision';\nimport '../plugins/bounce';\nimport '../plugins/repulsor';\nimport '../plugins/playerInputSteering';\nimport '../plugins/hordeSpawn';\nimport { MSG_DESTROY } from '../plugins/spawn';\nimport { MSG_DESTINATION_REACHED } from '../plugins/roadRunner';\n\nconst debug = false;\n\nconst world = window.world = new Core.World({\n  systems: {\n    ViewportWebGL: {\n      debug: debug,\n      container: '#game',\n      zoom: 0.15,\n      gridEnabled: false,\n      lineWidth: 2.0\n    },\n    DebugCanvas: {\n      container: '#game',\n      viewportSystemName: 'ViewportWebGL',\n    },\n    DrawStats: {},\n    DatGui: {},\n    PlayerInputSteering: {},\n    Health: {},\n    Motion: {},\n    Position: {},\n    Thruster: {},\n    Seeker: {},\n    Repulsor: {},\n    Collision: {},\n    Bounce: {},\n    Spawn: {},\n    RoadRunner: {\n      astarCacheTTL: 2.0\n    },\n    HordeSpawn: {\n      viewportSystemName: 'ViewportWebGL',\n      offscreenTTL: 0.5,\n      spawnMargin: 250,\n      minCount: 200,\n      maxFrameSpawn: 15,\n      spawn: (x, y) => {\n        const MIN_SIZE=100;\n        const MAX_SIZE=300;\n        const size = ((MAX_SIZE - MIN_SIZE) * Math.random()) + MIN_SIZE;\n        const repulsor = Object.keys(world.get('Repulsor'))\n          .map(key => [Math.random(), key])\n          .sort((a, b) => a[0] - b[0])[0][1];\n        world.insert({\n          Sprite: { name: 'mine', size: size, color: 0xff2222 },\n          Health: { max: 4 * size * size },\n          Spawn: { },\n          Collidable: { },\n          Bounce: { mass: 4 * size * size },\n          Position: { x: x, y: y, rotation: (Math.PI * 2) * Math.random() },\n          Motion: { dx: 0, dy: 0, drotation: (Math.PI * 2) * Math.random() },\n          Thruster: { deltaV: 2400 + Math.random() * 100, maxV: 1200 + Math.random() * 200 },\n          Seeker: { targetEntityId: repulsor, radPerSec: 0.5 + Math.random() * 0.2 },\n          HordeSpawn: { }\n        });\n      }\n    },\n  }\n});\n\nconst destinations = [];\n\nconst placeRepulsor = (x, y, horiz, markDestination) => {\n  const id = world.insert({\n    Name: { name: `repulsor${y}` },\n    Sprite: { name: 'repulsor', color: 0x114411, size: 100 },\n    Position: {\n      x: x + (horiz ? 0 : Math.random() * 200 - 100),\n      y: y + (!horiz ? 0 : Math.random() * 200 - 100)\n    },\n    Motion: { },\n    Repulsor: { range: 600, force: 300 },\n    Road: { type: 'repulsor', range: 800 }\n  });\n  if (markDestination) { destinations.push(id); }\n};\n\nlet x = 0;\nlet y = 0;\nconst spacing = 600;\nconst num = 4;\nfor (x = -num * spacing; x <= num * spacing; x += spacing) {\n  placeRepulsor(x, -(spacing * num), true, true);\n  placeRepulsor(x, 0, true, true);\n  placeRepulsor(x, (spacing * num), true, true);\n}\nfor (y = -(num-1) * spacing; y <= num * spacing; y += spacing) {\n  //placeRepulsor(-(spacing * num), y, false);\n  placeRepulsor(0, y, true, false);\n  //placeRepulsor((spacing * num), y, false);\n}\n\nfunction spawnSelfDrivingBus() {\n  const color = 0xffffff * Math.random();\n  const spawnPoint = destinations[Math.floor(Math.random() * destinations.length)];\n\n  const {x, y} = world.get('Position', spawnPoint);\n\n  let destination;\n  do {\n    destination = destinations[Math.floor(Math.random() * destinations.length)];\n  } while (distance({x, y}, world.get('Position', destination)) < 3000);\n\n  return world.insert({\n    Name: { name: `bus${Math.random()}` },\n    Sprite: { name: 'hero', size: 150, color },\n    Spawn: {\n      tombstone: (spawn, entityId) => ({\n        Name: world.get('Name', entityId),\n        Sprite: { name: 'hero', size: 150, color },\n        Position: world.get('Position', entityId),\n        Motion: { drotation: Math.PI * 8 },\n        Spawn: { ttl: 0.5 }\n      })\n    },\n    Collidable: {},\n    //Bounce: { mass: 7000 },\n    Position: {\n      x, y,\n      rotation: Math.PI * 2 * Math.random()\n    },\n    Motion: {},\n    Thruster: { deltaV: 5000, maxV: 1250 },\n    Seeker: {\n      thrusterTurnCutoff: Math.PI * 0.01,\n      thrusterTurnThrottle: 0.01,\n      radPerSec: Math.PI * 4,\n      active: false\n    },\n    Runner: { destination: '' + destination },\n  });\n}\n\n// Spawn some initial entities\nfor (let i = 0; i < 50; i++) {\n  setTimeout(spawnSelfDrivingBus, 5000 * Math.random());\n}\n\n// Spawn new entities when old ones reach their destinations\nworld.subscribe(MSG_DESTINATION_REACHED, (msg, entityId) => {\n  world.publish(MSG_DESTROY, entityId);\n  setTimeout(spawnSelfDrivingBus, 1000 * Math.random());\n});\n\nworld.debug = debug;\n\nworld.start();\n\nconst vpSystem = world.getSystem('ViewportWebGL');\nconst roadRunnerSystem = world.getSystem('RoadRunner');\nconst guiSystem = world.getSystem('DatGui');\nconst gui = guiSystem.gui;\n\nconst generalf = gui.addFolder('General');\ngeneralf.add(world, 'isPaused');\ngeneralf.add(world, 'debug');\ngeneralf.open();\n\nconst vpf = gui.addFolder('Viewport');\nconst names = [ 'gridEnabled', 'followEnabled', 'cameraX', 'cameraY' ];\nnames.forEach(name => vpf.add(vpSystem, name).listen());\nvpf.add(vpSystem, 'zoom',\n  vpSystem.options.zoomMin, vpSystem.options.zoomMax).listen();\nvpf.add(vpSystem, 'lineWidth', 1.0, 4.0).step(0.5).listen();\nvpf.add(vpSystem, 'spriteCount').listen();\nvpf.add(vpSystem, 'lastVertexCount').listen();\nvpf.add(vpSystem, 'actualBufferSize').listen();\nvpf.add(vpSystem, 'calculatedBufferSize').listen();\n\nconst rrf = gui.addFolder('RoadRunner');\n['debug', 'debugRange', 'debugRoads', 'debugPath']\n  .forEach(name => rrf.add(roadRunnerSystem.options, name));\nrrf.open();\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketches/rushhour.js"],"sourceRoot":""}