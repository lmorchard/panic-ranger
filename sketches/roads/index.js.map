{"version":3,"sources":["webpack:///./src/sketches/roads.js"],"names":["debug","world","window","systems","ViewportWebGL","container","zoom","gridEnabled","lineWidth","DebugCanvas","viewportSystemName","DrawStats","DatGui","PlayerInputSteering","Health","Motion","Position","Thruster","Seeker","Repulsor","Collision","Bounce","Spawn","RoadRunner","x","y","id","destinations","placeRepulsor","insert","Name","name","Sprite","color","size","Road","type","range","Math","random","push","spawnPoints","map","get","spawnSelfDrivingBus","destination","floor","length","Collidable","mass","rotation","PI","deltaV","maxV","radPerSec","active","Runner","i","setTimeout","subscribe","msg","entityId","publish","console","log","start","vpSystem","getSystem","roadRunnerSystem","guiSystem","gui","generalf","addFolder","add","open","vpf","names","forEach","listen","options","zoomMin","zoomMax","step","rrf"],"mappings":"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","file":"sketches/roads/index.js","sourcesContent":["import * as Core from '../lib/core';\n\nimport '../plugins/drawStats';\nimport '../plugins/memoryStats';\nimport '../plugins/datGui';\nimport '../plugins/debugCanvas';\nimport '../plugins/viewportWebGL';\nimport '../plugins/name';\nimport '../plugins/health';\nimport '../plugins/position';\nimport '../plugins/motion';\nimport '../plugins/thruster';\nimport '../plugins/seeker';\nimport '../plugins/collision';\nimport '../plugins/bounce';\nimport '../plugins/repulsor';\nimport '../plugins/playerInputSteering';\nimport '../plugins/hordeSpawn';\nimport { MSG_DESPAWN, MSG_SPAWN, MSG_DESTROY } from '../plugins/spawn';\nimport { MSG_DESTINATION_REACHED } from '../plugins/roadRunner';\n\nconst debug = false;\n\nconst world = window.world = new Core.World({\n  systems: {\n    ViewportWebGL: {\n      debug: debug,\n      container: '#game',\n      zoom: 0.125,\n      gridEnabled: false,\n      lineWidth: 2.0\n    },\n    DebugCanvas: {\n      container: '#game',\n      viewportSystemName: 'ViewportWebGL',\n    },\n    DrawStats: {},\n    DatGui: {},\n    PlayerInputSteering: {},\n    Health: {},\n    Motion: {},\n    Position: {},\n    Thruster: {},\n    Seeker: {},\n    Repulsor: {},\n    Collision: {},\n    Bounce: {},\n    Spawn: {},\n    RoadRunner: { },\n  }\n});\n\nlet x = 0;\nlet y = 0;\nlet id;\n\nconst destinations = [];\n\nconst placeRepulsor = (x, y) =>\n  id = world.insert({\n    Name: { name: `repulsor${y}` },\n    Sprite: { name: 'repulsor', color: 0x114411, size: 100 },\n    Position: { x, y },\n    Motion: { },\n    // Repulsor: { range: 600, force: 300 },\n    Road: { type: 'repulsor', range: 800 }\n  });\n\nfor (y = 0; y > -3000; y -= 600) {\n  placeRepulsor(x, y);\n  x += (-300 + Math.random() * 600);\n}\ndestinations.push(id);\n\nx = 0;\nfor (y = 600; y < 3000; y += 600) {\n  placeRepulsor(x, y);\n  x += (-300 + Math.random() * 600);\n}\ndestinations.push(id);\n\ny = 0;\nfor (x = -600; x > -3000; x -= 600) {\n  placeRepulsor(x, y);\n  y += (-300 + Math.random() * 600);\n}\ndestinations.push(id);\n\ny = 0;\nfor (x = 600; x < 3000; x += 600) {\n  placeRepulsor(x, y);\n  y += (-300 + Math.random() * 600);\n}\ndestinations.push(id);\n\nconst spawnPoints = destinations.map(id => world.get('Position', id));\n\nfunction spawnSelfDrivingBus() {\n  const color = 0xffffff * Math.random();\n  const destination = '' +\n    destinations[Math.floor(Math.random() * destinations.length)];\n  let {x, y} = spawnPoints[Math.floor(Math.random() * spawnPoints.length)];\n  x += (400 * Math.random()) - 200;\n  y += (400 * Math.random()) - 200;\n\n  return world.insert({\n    Name: { name: `bus${Math.random()}` },\n    Sprite: { name: 'hero', size: 150, color },\n    Spawn: { },\n    Collidable: {},\n    Bounce: { mass: 7000 },\n    Position: {\n      x, y,\n      rotation: Math.PI * 2 * Math.random()\n    },\n    Motion: {},\n    Thruster: { deltaV: 4000, maxV: 1500 },\n    Seeker: { radPerSec: Math.PI * 1.25, active: false },\n    Runner: { destination },\n  });\n}\n\n// Spawn some initial entities\nfor (let i = 0; i < 10; i++) {\n  setTimeout(spawnSelfDrivingBus, 1000 * Math.random());\n}\n\n// Spawn new entities when old ones reach their destinations\nworld.subscribe(MSG_DESTINATION_REACHED, (msg, entityId) => {\n  world.publish(MSG_DESTROY, entityId);\n  setTimeout(spawnSelfDrivingBus, 1000 * Math.random());\n});\n\nworld.subscribe(MSG_DESPAWN, (msg, entityId) =>\n  console.log('DESPAWN', world.get('Name', entityId).name));\nworld.subscribe(MSG_SPAWN, (msg, entityId) =>\n  console.log('SPAWN', world.get('Name', entityId).name));\n\nworld.debug = debug;\n\nworld.start();\n\nconst vpSystem = world.getSystem('ViewportWebGL');\nconst roadRunnerSystem = world.getSystem('RoadRunner');\nconst guiSystem = world.getSystem('DatGui');\nconst gui = guiSystem.gui;\n\nconst generalf = gui.addFolder('General');\ngeneralf.add(world, 'isPaused');\ngeneralf.add(world, 'debug');\ngeneralf.open();\n\nconst vpf = gui.addFolder('Viewport');\nconst names = [ 'gridEnabled', 'followEnabled', 'cameraX', 'cameraY' ];\nnames.forEach(name => vpf.add(vpSystem, name).listen());\nvpf.add(vpSystem, 'zoom',\n  vpSystem.options.zoomMin, vpSystem.options.zoomMax).listen();\nvpf.add(vpSystem, 'lineWidth', 1.0, 4.0).step(0.5).listen();\n\nconst rrf = gui.addFolder('RoadRunner');\n['debug', 'debugRange', 'debugRoads', 'debugPath']\n  .forEach(name => rrf.add(roadRunnerSystem.options, name));\nrrf.open();\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketches/roads.js"],"sourceRoot":""}