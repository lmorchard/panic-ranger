{"version":3,"sources":["webpack:///./src/sketches/collision.js"],"names":["debug","world","window","systems","ViewportWebGL","container","followName","lineWidth","zoom","DrawStats","MemoryStats","DatGui","PlayerInputSteering","Motion","Position","Thruster","Seeker","Collision","Bounce","insert","Name","name","Sprite","size","color","Collidable","mass","x","y","deltaV","maxV","active","radPerSec","Math","PI","spawnAsteroid","width","height","dx","dy","dr","health","Health","max","drotation","spawnField","centerX","centerY","radius","MAX_ASTEROIDS","MAX_TRIES","MIN_SIZE","MAX_SIZE","MAX_GRAV","vCenter","vSpawn","vGrav","inField","idx","c","random","rot","setValues","rotateAround","isClear","fldIdx","length","item","abs","push","rotate","pos","num","start","vpSystem","getSystem","guiSystem","gui","add","options","zoomMin","zoomMax","listen","step","names","forEach","cp","cursorPosition"],"mappings":"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","file":"sketches/collision/index.js","sourcesContent":["import * as Core from '../lib/core';\n\nimport Vector2D from '../lib/Vector2D';\n\nimport '../plugins/drawStats';\nimport '../plugins/memoryStats';\nimport '../plugins/datGui';\nimport '../plugins/viewportWebGL';\nimport '../plugins/name';\nimport '../plugins/health';\nimport '../plugins/position';\nimport '../plugins/motion';\nimport '../plugins/thruster';\nimport '../plugins/seeker';\nimport '../plugins/collision';\nimport '../plugins/bounce';\nimport '../plugins/playerInputSteering';\n\nconst debug = true;\n\nconst world = window.world = new Core.World({\n  systems: {\n    ViewportWebGL: {\n      debug: debug,\n      container: '#game',\n      followName: 'hero1',\n      lineWidth: 1.5,\n      zoom: 0.5\n    },\n    DrawStats: {},\n    MemoryStats: {},\n    DatGui: {},\n    PlayerInputSteering: {},\n    Motion: {},\n    Position: {},\n    Thruster: {},\n    Seeker: {},\n    Collision: {},\n    Bounce: {}\n  }\n});\n\nworld.insert({\n  Name: { name: 'hero1'},\n  Sprite: { name: 'hero', size: 100, color: 0x3333ff },\n  Collidable: {},\n  Bounce: { mass: 7000 },\n  Position: { x: 0, y: 0 },\n  Motion: {},\n  Thruster: { deltaV: 1200, maxV: 500, active: false },\n  PlayerInputSteering: { radPerSec: Math.PI }\n});\n\nfunction spawnAsteroid(x, y, width, height, dx, dy, dr, mass, health) {\n  world.insert({\n    Sprite: { name: 'asteroid', size: width},\n    Health: { max: health },\n    Collidable: {},\n    Bounce: { mass: mass },\n    Position: { x: x, y: y },\n    Motion: { dx: dx, dy: dy, drotation: dr }\n  });\n}\n\nfunction spawnField(centerX, centerY, radius=300,\n    MAX_ASTEROIDS=150, MAX_TRIES=5, MIN_SIZE=20, MAX_SIZE=300, MAX_GRAV=10) {\n\n  const vCenter = new Vector2D(centerY, centerX);\n  const vSpawn = new Vector2D(0, 0);\n  const vGrav = new Vector2D(0, 0);\n  const inField = [];\n\n  for (let idx = 0; idx < MAX_ASTEROIDS; idx++) {\n    for (let c = 0; c < MAX_TRIES; c++) {\n\n      const size = ((MAX_SIZE - MIN_SIZE) * Math.random()) + MIN_SIZE;\n      const rot = (Math.PI*4) * Math.random();\n      vSpawn.setValues(vCenter.x, vCenter.y - (((radius - 1) * Math.random()) + 1));\n      vSpawn.rotateAround(vCenter, rot);\n\n      let isClear = true;\n      for (let fldIdx = 0; fldIdx < inField.length; fldIdx++) {\n        const item = inField[fldIdx];\n        if (Math.abs(vSpawn.x - item.x) * 2 >= (size + item.width) * 1.025) { continue; }\n        if (Math.abs(vSpawn.y - item.y) * 2 >= (size + item.height) * 1.025) { continue; }\n        isClear = false;\n        break;\n      }\n      if (!isClear) { continue; }\n\n      inField.push({ x: vSpawn.x, y: vSpawn.y, width: size, height: size });\n\n      vGrav.setValues(0, Math.random() * MAX_GRAV);\n      vGrav.rotate(rot);\n\n      spawnAsteroid(\n        vSpawn.x, vSpawn.y,\n        size, size,\n        vGrav.x, vGrav.y,\n        (Math.PI * 0.25) * Math.random(),\n        4 * size * size,\n        4 * size * size\n      );\n\n    }\n  }\n}\n\nconst pos = 470;\nconst size = 440;\nconst num = 200;\n\nspawnField(-pos, -pos, size, num);\nspawnField(pos, pos, size, num);\nspawnField(pos, -pos, size, num);\nspawnField(-pos, pos, size, num);\n\nworld.start();\n\nconst vpSystem = world.getSystem('ViewportWebGL');\nconst guiSystem = world.getSystem('DatGui');\nconst gui = guiSystem.gui;\n\ngui.add(world, 'isPaused');\ngui.add(world, 'debug');\ngui.add(vpSystem, 'zoom', vpSystem.options.zoomMin, vpSystem.options.zoomMax).listen();\ngui.add(vpSystem, 'lineWidth', 1.0, 4.0).step(0.5).listen();\n\nconst names = [ 'gridEnabled', 'followEnabled', 'cameraX', 'cameraY' ];\nnames.forEach(function (name) {\n  gui.add(vpSystem, name).listen();\n});\n\nconst cp = vpSystem.cursorPosition;\ngui.add(cp, 'x').listen();\ngui.add(cp, 'y').listen();\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketches/collision.js"],"sourceRoot":""}