{"version":3,"sources":["webpack:///./src/sketches/repulsors.js"],"names":["debug","world","window","systems","ViewportWebGL","container","followName","zoom","DrawStats","MemoryStats","DatGui","PlayerInputSteering","Health","Motion","Position","Thruster","Seeker","Repulsor","Collision","Bounce","Spawn","HordeSpawn","viewportSystemName","offscreenTTL","spawnMargin","minCount","spawn","x","y","MIN_SIZE","MAX_SIZE","size","Math","random","insert","Sprite","name","color","max","Collidable","mass","rotation","PI","dx","dy","drotation","deltaV","maxV","targetName","radPerSec","Name","damage","active","range","force","start","vpSystem","getSystem","spawnSystem","guiSystem","gui","add","options","zoomMin","zoomMax","listen","step","names","forEach","cp","cursorPosition"],"mappings":"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","file":"sketches/repulsors/index.js","sourcesContent":["import * as Core from '../lib/core';\n\nimport '../plugins/drawStats';\nimport '../plugins/memoryStats';\nimport '../plugins/datGui';\nimport '../plugins/viewportWebGL';\nimport '../plugins/name';\nimport '../plugins/health';\nimport '../plugins/position';\nimport '../plugins/motion';\nimport '../plugins/thruster';\nimport '../plugins/seeker';\nimport '../plugins/collision';\nimport '../plugins/bounce';\nimport '../plugins/repulsor';\nimport '../plugins/playerInputSteering';\nimport '../plugins/hordeSpawn';\nimport '../plugins/spawn';\n\nconst debug = true;\n\nconst world = window.world = new Core.World({\n  systems: {\n    ViewportWebGL: {\n      debug: debug,\n      container: '#game',\n      followName: 'hero1',\n      zoom: 0.3\n    },\n    DrawStats: {},\n    MemoryStats: {},\n    DatGui: {},\n    PlayerInputSteering: {},\n    Health: {},\n    Motion: {},\n    Position: {},\n    Thruster: {},\n    Seeker: {},\n    Repulsor: {},\n    Collision: {},\n    Bounce: {},\n    Spawn: {},\n    HordeSpawn: {\n      viewportSystemName: 'ViewportWebGL',\n      offscreenTTL: 0.5,\n      spawnMargin: 250,\n      minCount: 200,\n      spawn: (x, y) => {\n        const MIN_SIZE=100;\n        const MAX_SIZE=300;\n        const size = ((MAX_SIZE - MIN_SIZE) * Math.random()) + MIN_SIZE;\n        world.insert({\n          Sprite: { name: 'mine', size: size, color: 0xff2222 },\n          Health: { max: 4 * size * size },\n          Spawn: {\n          /*\n            tombstone: (spawn, entityId) => {\n              const position = world.get('Position', entityId);\n              return {\n                Sprite: {\n                  name: 'explosion',\n                  size,\n                  color: 0xff0000,\n                  ttl: 0.5\n                },\n                Position: { x: position.x, y: position.y },\n                Spawn: { ttl: 0.5 }\n              };\n            }\n          */\n          },\n          Collidable: { },\n          Bounce: { /* damage: 0.0001, */ mass: 4 * size * size },\n          Position: { x: x, y: y, rotation: (Math.PI * 2) * Math.random() },\n          Motion: { dx: 0, dy: 0, drotation: (Math.PI * 2) * Math.random() },\n          Thruster: { deltaV: 2400 + Math.random() * 100, maxV: 1200 + Math.random() * 200 },\n          Seeker: { targetName: 'hero1', radPerSec: 0.5 + Math.random() * 0.2 },\n          HordeSpawn: { }\n        });\n      }\n    }\n  }\n});\n\nworld.insert({\n  Name: { name: 'hero1'},\n  Health: { max: 4000 },\n  Sprite: { name: 'hero', size: 150, color: 0x3333ff },\n  Spawn: {},\n  Collidable: {},\n  Bounce: { damage: 0.0001, mass: 7000 },\n  Position: { x: 0, y: 0, rotation: -(Math.PI / 2) },\n  Motion: {},\n  Thruster: { deltaV: 2800, maxV: 1400, active: false },\n  PlayerInputSteering: { radPerSec: Math.PI },\n  // Repulsor: { range: 600, force: 300 }\n});\n\nlet x = 0;\nfor (let y = 0; y > -15000; y -= 600) {\n  world.insert({\n    Name: { name: `repulsor${y}` },\n    Sprite: { name: 'repulsor', color: 0x228822 },\n    Position: { x, y },\n    Motion: { },\n    Repulsor: { range: 600, force: 300 }\n  });\n  x += (-300 + Math.random() * 600);\n}\n\nworld.start();\n\nconst vpSystem = world.getSystem('ViewportWebGL');\nconst spawnSystem = world.getSystem('HordeSpawn');\nconst guiSystem = world.getSystem('DatGui');\nconst gui = guiSystem.gui;\n\ngui.add(world, 'isPaused');\ngui.add(world, 'debug');\ngui.add(vpSystem, 'zoom', vpSystem.options.zoomMin, vpSystem.options.zoomMax).listen();\ngui.add(vpSystem, 'lineWidth', 1.0, 4.0).step(0.5).listen();\n\nconst names = [ 'gridEnabled', 'followEnabled', 'cameraX', 'cameraY' ];\nnames.forEach(function (name) {\n  gui.add(vpSystem, name).listen();\n});\n\nconst cp = vpSystem.cursorPosition;\ngui.add(cp, 'x').listen();\ngui.add(cp, 'y').listen();\n\ngui.add(spawnSystem, 'spawnCount').listen();\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketches/repulsors.js"],"sourceRoot":""}