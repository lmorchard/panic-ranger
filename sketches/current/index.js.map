{"version":3,"sources":["webpack:///./src/sketches/current.js"],"names":["debug","world","window","systems","ViewportWebGL","container","zoom","gridEnabled","lineWidth","DebugCanvas","viewportSystemName","DrawStats","DatGui","PlayerInputSteering","Health","Motion","Position","Thruster","Seeker","Repulsor","Collision","Bounce","Spawn","RoadRunner","destinations","placeRepulsor","x","y","horiz","push","insert","Name","name","Sprite","color","size","Math","random","range","force","Road","type","spacing","num","spawnSelfDrivingBus","spawnPoint","floor","length","get","destination","distance","tombstone","spawn","entityId","drotation","PI","ttl","Collidable","rotation","deltaV","maxV","thrusterTurnCutoff","thrusterTurnThrottle","radPerSec","active","Runner","i","setTimeout","subscribe","msg","publish","start","vpSystem","getSystem","roadRunnerSystem","guiSystem","gui","generalf","addFolder","add","open","vpf","names","forEach","listen","options","zoomMin","zoomMax","step","rrf"],"mappings":"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","file":"sketches/current/index.js","sourcesContent":["import * as Core from '../lib/core';\nimport { distance } from '../lib/utils';\n\nimport '../plugins/drawStats';\nimport '../plugins/memoryStats';\nimport '../plugins/datGui';\nimport '../plugins/debugCanvas';\nimport '../plugins/viewportWebGL';\nimport '../plugins/name';\nimport '../plugins/health';\nimport '../plugins/position';\nimport '../plugins/motion';\nimport '../plugins/thruster';\nimport '../plugins/seeker';\nimport '../plugins/collision';\nimport '../plugins/bounce';\nimport '../plugins/repulsor';\nimport '../plugins/playerInputSteering';\nimport '../plugins/hordeSpawn';\nimport { MSG_DESTROY } from '../plugins/spawn';\nimport { MSG_DESTINATION_REACHED } from '../plugins/roadRunner';\n\nconst debug = false;\n\nconst world = window.world = new Core.World({\n  systems: {\n    ViewportWebGL: {\n      debug: debug,\n      container: '#game',\n      zoom: 0.125,\n      gridEnabled: false,\n      lineWidth: 2.0\n    },\n    DebugCanvas: {\n      container: '#game',\n      viewportSystemName: 'ViewportWebGL',\n    },\n    DrawStats: {},\n    DatGui: {},\n    PlayerInputSteering: {},\n    Health: {},\n    Motion: {},\n    Position: {},\n    Thruster: {},\n    Seeker: {},\n    Repulsor: {},\n    Collision: {},\n    Bounce: {},\n    Spawn: {},\n    RoadRunner: { },\n  }\n});\n\nconst destinations = [];\n\nconst placeRepulsor = (x, y, horiz) =>\n  destinations.push(world.insert({\n    Name: { name: `repulsor${y}` },\n    Sprite: { name: 'repulsor', color: 0x114411, size: 100 },\n    Position: {\n      x: x + (horiz ? 0 : Math.random() * 200 - 100),\n      y: y + (!horiz ? 0 : Math.random() * 200 - 100)\n    },\n    Motion: { },\n    Repulsor: { range: 600, force: 300 },\n    Road: { type: 'repulsor', range: 800 }\n  }));\n\nlet x = 0;\nlet y = 0;\nconst spacing = 600;\nconst num = 4;\nfor (x = -num * spacing; x <= num * spacing; x += spacing) {\n  placeRepulsor(x, -(spacing * num), true);\n  placeRepulsor(x, 0, true);\n  placeRepulsor(x, (spacing * num), true);\n}\nfor (y = -(num-1) * spacing; y <= num * spacing; y += spacing) {\n  placeRepulsor(-(spacing * num), y, false);\n  placeRepulsor(0, y, true);\n  placeRepulsor((spacing * num), y, false);\n}\n\nfunction spawnSelfDrivingBus() {\n  const color = 0xffffff * Math.random();\n  const spawnPoint = destinations[Math.floor(Math.random() * destinations.length)];\n\n  const {x, y} = world.get('Position', spawnPoint);\n\n  let destination;\n  do {\n    destination = destinations[Math.floor(Math.random() * destinations.length)];\n  } while (distance({x, y}, world.get('Position', destination)) < 3000);\n\n  return world.insert({\n    Name: { name: `bus${Math.random()}` },\n    Sprite: { name: 'hero', size: 150, color },\n    Spawn: {\n      tombstone: (spawn, entityId) => ({\n        Name: world.get('Name', entityId),\n        Sprite: { name: 'hero', size: 150, color },\n        Position: world.get('Position', entityId),\n        Motion: { drotation: Math.PI * 8 },\n        Spawn: { ttl: 0.5 }\n      })\n    },\n    Collidable: {},\n    // Bounce: { mass: 7000 },\n    Position: {\n      x, y,\n      rotation: Math.PI * 2 * Math.random()\n    },\n    Motion: {},\n    Thruster: { deltaV: 5000, maxV: 1250 },\n    Seeker: {\n      thrusterTurnCutoff: Math.PI * 0.01,\n      thrusterTurnThrottle: 0.01,\n      radPerSec: Math.PI * 4,\n      active: false\n    },\n    Runner: { destination: '' + destination },\n  });\n}\n\n// Spawn some initial entities\nfor (let i = 0; i < 50; i++) {\n  setTimeout(spawnSelfDrivingBus, 10000 * Math.random());\n}\n\n// Spawn new entities when old ones reach their destinations\nworld.subscribe(MSG_DESTINATION_REACHED, (msg, entityId) => {\n  world.publish(MSG_DESTROY, entityId);\n  setTimeout(spawnSelfDrivingBus, 1000 * Math.random());\n});\n\nworld.debug = debug;\n\nworld.start();\n\nconst vpSystem = world.getSystem('ViewportWebGL');\nconst roadRunnerSystem = world.getSystem('RoadRunner');\nconst guiSystem = world.getSystem('DatGui');\nconst gui = guiSystem.gui;\n\nconst generalf = gui.addFolder('General');\ngeneralf.add(world, 'isPaused');\ngeneralf.add(world, 'debug');\ngeneralf.open();\n\nconst vpf = gui.addFolder('Viewport');\nconst names = [ 'gridEnabled', 'followEnabled', 'cameraX', 'cameraY' ];\nnames.forEach(name => vpf.add(vpSystem, name).listen());\nvpf.add(vpSystem, 'zoom',\n  vpSystem.options.zoomMin, vpSystem.options.zoomMax).listen();\nvpf.add(vpSystem, 'lineWidth', 1.0, 4.0).step(0.5).listen();\n\nconst rrf = gui.addFolder('RoadRunner');\n['debug', 'debugRange', 'debugRoads', 'debugPath']\n  .forEach(name => rrf.add(roadRunnerSystem.options, name));\nrrf.open();\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketches/current.js"],"sourceRoot":""}