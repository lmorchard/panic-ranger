{"version":3,"sources":["webpack:///sketches/explosions/index.js","webpack:///./src/sketches/explosions.js"],"names":["webpackJsonp","149","module","exports","__webpack_require__","150","__webpack_exports__","spawnExplosion","x","FIELD_SIZE","Math","random","y","ttl","color","colors","floor","length","world","insert","Sprite","name","Position","Spawn","tombstone","size","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default","n","__WEBPACK_IMPORTED_MODULE_1__lib_core__","__WEBPACK_IMPORTED_MODULE_9__plugins_spawn__","debugData","count","spawns","despawns","window","systems","ViewportWebGL","debug","container","WebGL","zoom","DrawStats","MemoryStats","DatGui","Motion","start","i","subscribe","get","vpSystem","getSystem","guiSystem","gui","add","options","zoomMin","zoomMax","listen","forEach"],"mappings":"AAAAA,cAAc,IAERC;;;;;AAMA,SAAUC,EAAQC,EAASC,GAEjCF,EAAOC,QAAUC,qCAAuD,MAKlEC;;;;;AAMA,SAAUH,EAAQI,EAAqBF,GAE7C,YCkBA,SAASG,KACP,GAAMC,GAAkB,EAAbC,EAAiBC,KAAKC,SAAYF,EACvCG,EAAkB,EAAbH,EAAiBC,KAAKC,SAAYF,EACvCI,EAAM,GAAM,EAAMH,KAAKC,SACvBG,EAAQC,EAAOL,KAAKM,MAAMN,KAAKC,SAAWI,EAAOE,QAEvDC,GAAMC,QACJC,QAAUC,KAAM,UAAWP,SAC3BQ,UAAYd,IAAGI,KACfW,OACEV,IAAKH,KAAKC,SACVa,WACEJ,QACEC,KAAM,YACNI,KAAM,IAAsB,IAAhBf,KAAKC,SACjBG,QAAOD,OAETS,UAAYd,IAAGI,KACfW,OAASV,WDnCjBa,OAAOC,eAAerB,EAAqB,cAAgBsB,OAAO,GAC7C,IAAIC,GAAkEzB,0CAA6D,IAC/H0B,EAA0E1B,EAAoB2B,EAAEF,GAChGG,EAA0C5B,oBAAuC,GAQjF6B,GAPmD7B,6BAAgD,IAC9CA,+BAAkD,IACvDA,0BAA6C,IACtCA,iCAAoD,IAC7DA,wBAA2C,IACvCA,4BAA+C,GACjDA,0BAA6C,GAC9CA,yBAA4C,KCtB9GK,EAAa,KAEbyB,GACJC,MAAO,EACPC,OAAQ,EACRC,SAAU,GAGNnB,EAAQoB,OAAOpB,MAAQ,GAAIc,GAAA,OAC/BO,SACEC,eACEC,OAbQ,EAcRC,UAAW,QACXC,MAAO,YACPC,KAAM,IAERC,aACAC,eACAC,UACAC,UACA1B,YACAC,WAGJL,GAAM+B,OA4BN,KAAK,GA1BClC,IAAW,SAAU,MAAU,IAAU,SAAU,MAAU,UA0B1DmC,EAAI,EAAGA,EArDE,IAqDaA,IAC7B3C,GAGFW,GAAMiC,UAAUlB,EAAA,UAAW,WACzBC,EAAUE,WAGZlB,EAAMiC,UAAUlB,EAAA,YAAa,WAC3BC,EAAUG,WACVH,EAAUC,MAAQL,IAAYZ,EAAMkC,IAAI,eAAiBnC,MACzD,KAAK,GAAIiC,GAAI,EAAGA,EAhEA,IAgEgBhB,EAAUC,MAAOe,IAC/C3C,KAIJ,IAAM8C,GAAWnC,EAAMoC,UAAU,iBAC3BC,EAAYrC,EAAMoC,UAAU,UAC5BE,EAAMD,EAAUC,GAEtBA,GAAIC,IAAIvC,EAAO,YACfsC,EAAIC,IAAIvC,EAAO,SACfsC,EAAIC,IAAIJ,EAAU,OAAQA,EAASK,QAAQC,QAASN,EAASK,QAAQE,SAASC,UAE7E,eAAeC,QAAQ,SAAAzC,GAAA,MAAQmC,GAAIC,IAAIJ,EAAUhC,GAAMwC,YACvD,QAAS,SAAU,YAAYC,QAAQ,SAAAzC,GAAA,MAAQmC,GAAIC,IAAIvB,EAAWb,GAAMwC,cD6CtE","file":"sketches/explosions/index.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 149:\n/*!******************************************!*\\\n  !*** multi ./src/sketches/explosions.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! ./src/sketches/explosions.js */150);\n\n\n/***/ }),\n\n/***/ 150:\n/*!************************************!*\\\n  !*** ./src/sketches/explosions.js ***!\n  \\************************************/\n/*! exports provided:  */\n/*! all exports used */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__ = __webpack_require__(/*! babel-runtime/core-js/object/keys */ 38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_core__ = __webpack_require__(/*! ../lib/core */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__plugins_drawStats__ = __webpack_require__(/*! ../plugins/drawStats */ 19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__plugins_memoryStats__ = __webpack_require__(/*! ../plugins/memoryStats */ 20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__plugins_datGui__ = __webpack_require__(/*! ../plugins/datGui */ 18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__plugins_viewportWebGL__ = __webpack_require__(/*! ../plugins/viewportWebGL */ 30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__plugins_name__ = __webpack_require__(/*! ../plugins/name */ 21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__plugins_position__ = __webpack_require__(/*! ../plugins/position */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__plugins_motion__ = __webpack_require__(/*! ../plugins/motion */ 8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__plugins_spawn__ = __webpack_require__(/*! ../plugins/spawn */ 27);\n\n\n\n\n\n\n\n\n\n\n\n\nvar DEBUG = true;\nvar MIN_COUNT = 150;\nvar FIELD_SIZE = 1500;\n\nvar debugData = {\n  count: 0,\n  spawns: 0,\n  despawns: 0\n};\n\nvar world = window.world = new __WEBPACK_IMPORTED_MODULE_1__lib_core__[\"World\"]({\n  systems: {\n    ViewportWebGL: {\n      debug: DEBUG,\n      container: '#game',\n      WebGL: '#viewport',\n      zoom: 0.3\n    },\n    DrawStats: {},\n    MemoryStats: {},\n    DatGui: {},\n    Motion: {},\n    Position: {},\n    Spawn: {}\n  }\n});\nworld.start();\n\nvar colors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00, 0x00ffff, 0xffffff];\n\nfunction spawnExplosion() {\n  var x = FIELD_SIZE * 2 * Math.random() - FIELD_SIZE;\n  var y = FIELD_SIZE * 2 * Math.random() - FIELD_SIZE;\n  var ttl = 0.5 + 2.0 * Math.random();\n  var color = colors[Math.floor(Math.random() * colors.length)];\n\n  world.insert({\n    Sprite: { name: 'default', color: color },\n    Position: { x: x, y: y },\n    Spawn: {\n      ttl: Math.random(),\n      tombstone: {\n        Sprite: {\n          name: 'explosion',\n          size: 100 + Math.random() * 500,\n          color: color, ttl: ttl\n        },\n        Position: { x: x, y: y },\n        Spawn: { ttl: ttl }\n      }\n    }\n  });\n}\n\nfor (var i = 0; i < MIN_COUNT; i++) {\n  spawnExplosion();\n}\n\nworld.subscribe(__WEBPACK_IMPORTED_MODULE_9__plugins_spawn__[\"MSG_SPAWN\"], function () /*msg, entityId*/{\n  debugData.spawns++;\n});\n\nworld.subscribe(__WEBPACK_IMPORTED_MODULE_9__plugins_spawn__[\"MSG_DESPAWN\"], function () /*msg, entityId*/{\n  debugData.despawns++;\n  debugData.count = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default()(world.get('Sprite') || {}).length;\n  for (var _i = 0; _i < MIN_COUNT - debugData.count; _i++) {\n    spawnExplosion();\n  }\n});\n\nvar vpSystem = world.getSystem('ViewportWebGL');\nvar guiSystem = world.getSystem('DatGui');\nvar gui = guiSystem.gui;\n\ngui.add(world, 'isPaused');\ngui.add(world, 'debug');\ngui.add(vpSystem, 'zoom', vpSystem.options.zoomMin, vpSystem.options.zoomMax).listen();\n\n['gridEnabled'].forEach(function (name) {\n  return gui.add(vpSystem, name).listen();\n});\n['count', 'spawns', 'despawns'].forEach(function (name) {\n  return gui.add(debugData, name).listen();\n});\n\n/***/ })\n\n},[149]);\n\n\n// WEBPACK FOOTER //\n// sketches/explosions/index.js","import { World } from '../lib/core';\n\nimport '../plugins/drawStats';\nimport '../plugins/memoryStats';\nimport '../plugins/datGui';\nimport '../plugins/viewportWebGL';\nimport '../plugins/name';\nimport '../plugins/position';\nimport '../plugins/motion';\nimport { MSG_SPAWN, MSG_DESPAWN } from '../plugins/spawn';\n\nconst DEBUG = true;\nconst MIN_COUNT = 150;\nconst FIELD_SIZE = 1500;\n\nconst debugData = {\n  count: 0,\n  spawns: 0,\n  despawns: 0\n};\n\nconst world = window.world = new World({\n  systems: {\n    ViewportWebGL: {\n      debug: DEBUG,\n      container: '#game',\n      WebGL: '#viewport',\n      zoom: 0.3\n    },\n    DrawStats: {},\n    MemoryStats: {},\n    DatGui: {},\n    Motion: {},\n    Position: {},\n    Spawn: {}\n  }\n});\nworld.start();\n\nconst colors = [ 0xff0000, 0x00ff00, 0x0000ff, 0xffff00, 0x00ffff, 0xffffff ];\n\nfunction spawnExplosion() {\n  const x = (FIELD_SIZE * 2 * Math.random()) - FIELD_SIZE;\n  const y = (FIELD_SIZE * 2 * Math.random()) - FIELD_SIZE;\n  const ttl = 0.5 + 2.0 * Math.random();\n  const color = colors[Math.floor(Math.random() * colors.length)];\n\n  world.insert({\n    Sprite: { name: 'default', color },\n    Position: { x, y },\n    Spawn: {\n      ttl: Math.random(),\n      tombstone: {\n        Sprite: {\n          name: 'explosion',\n          size: 100 + Math.random() * 500,\n          color, ttl\n        },\n        Position: { x, y },\n        Spawn: { ttl }\n      }\n    }\n  });\n}\n\nfor (let i = 0; i < MIN_COUNT; i++) {\n  spawnExplosion();\n}\n\nworld.subscribe(MSG_SPAWN, (/*msg, entityId*/) => {\n  debugData.spawns++;\n});\n\nworld.subscribe(MSG_DESPAWN, (/*msg, entityId*/) => {\n  debugData.despawns++;\n  debugData.count = Object.keys(world.get('Sprite') || {}).length;\n  for (let i = 0; i < MIN_COUNT - debugData.count; i++) {\n    spawnExplosion();\n  }\n});\n\nconst vpSystem = world.getSystem('ViewportWebGL');\nconst guiSystem = world.getSystem('DatGui');\nconst gui = guiSystem.gui;\n\ngui.add(world, 'isPaused');\ngui.add(world, 'debug');\ngui.add(vpSystem, 'zoom', vpSystem.options.zoomMin, vpSystem.options.zoomMax).listen();\n\n['gridEnabled'].forEach(name => gui.add(vpSystem, name).listen());\n['count', 'spawns', 'despawns'].forEach(name => gui.add(debugData, name).listen());\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketches/explosions.js"],"sourceRoot":""}